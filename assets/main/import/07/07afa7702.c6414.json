[1,["ecpdLyjvZBwrvm+cedCcQy","a2MjXRFdtLlYQ5ouAFv/+R","30X4pTSjRIn5zSwVJ/Uzwq","18c06EAQdHXoL6aqDxQaZz","bd8UJWoatKnYsFsYwn8njS","90p1DLjdhA96uSoB24CvBi","3058yDlVVJW77re9sWFtNY","b6nYVWiOFH2Jyyy+TQPfF/","d4ieUEEydLyYqr289/yB1x","f7xL7o4XdNqIoYpSd2o9Ht","74tKtVl/FPvI7xz84KV+9H","55xu5SMdVLZoeQGI9geXxL"],["node","_spriteFrame","_textureSetter","_parent","scene","loadingPrefab","_effectAsset","root","logo","content","title","copyright","age","data"],[["cc.Node",["_name","_id","_opacity","_objFlags","_components","_contentSize","_parent","_trs","_color","_prefab","_children"],-1,9,5,1,7,5,4,12],"cc.SpriteFrame",["cc.Widget",["_alignFlags","_originalWidth","_originalHeight","_bottom","node"],-1,1],["cc.Sprite",["_sizeMode","node","_materials","_spriteFrame"],2,1,3,6],["cc.Node",["_name","_active","_children","_parent","_components","_prefab","_contentSize","_trs"],1,2,1,9,4,5,7],["cc.PrefabInfo",["fileId","root","asset"],2,1,1],["cc.Label",["_string","_fontSize","_N$horizontalAlign","_N$verticalAlign","_lineHeight","node","_materials"],-2,1,3],["cc.SceneAsset",["_name","asyncLoadAssets"],1],["cc.Node",["_name","_parent","_components","_prefab","_contentSize","_trs"],2,1,2,4,5,7],["cc.Canvas",["_fitWidth","_fitHeight","node","_designResolution"],1,1,5],["06125y+k6dJWYy3Eui9vWAf",["node"],3,1],["5952891SnBNaZF4y1ZkrNHW",["node","fonts","loadingPrefab"],3,1,3,6],["cc.BlockInputEvents",["node"],3,1],["cc.Scene",["_name","_active","_children","_anchorPoint","_trs"],1,2,5,7],["cc.Camera",["_clearFlags","_depth","node"],1,1],["cc.Material",["_name","_techniqueData"],1],["cc.TTFFont",["_name","_native"],1],["cc.Prefab",["_name"],2],["4284b2heb5DPrSxSLGTf+FE",["node","age","copyright","title","content","ageSpriteFrame","logo"],3,1,1,1,1,1,12,1],["cc.LabelOutline",["_width","node","_color"],2,1,5],["cc.Button",["_N$transition","node","clickEvents"],2,1,9],["cc.ClickEvent",["_componentId","handler","target"],1,1],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[5,0,1,2,2],[3,0,1,2,3,2],[0,0,6,4,5,2],[0,0,6,4,9,5,7,2],[2,0,1,2,4,4],[6,0,1,4,2,3,5,6,6],[0,0,2,6,4,8,5,3],[0,0,6,4,9,8,5,7,2],[2,0,3,4,3],[19,0,1,2,2],[7,0,1,3],[0,0,1,10,4,5,7,3],[0,0,6,2],[0,0,6,4,8,5,2],[0,0,3,6,4,5,3],[4,0,1,3,2,3],[4,0,2,4,5,6,7,2],[8,0,1,2,3,4,5,2],[9,0,1,2,3,3],[2,0,4,2],[10,0,1],[11,0,1,2,1],[3,1,2,3,1],[3,1,2,1],[12,0,1],[13,0,1,2,3,4,3],[14,0,1,2,3],[15,0,1,3],[16,0,1,3],[17,0,2],[18,0,1,2,3,4,5,6,1],[5,1,2,1],[6,0,1,2,3,5,6,5],[20,0,1,2,2],[21,0,1,2,3],[22,0,1,2,4]],[[[[10,"App",null],[11,"Canvas","a5esZu+45LA5mBpvttspPD",[[-5,-6,-7,-8,-9,-10,[12,"logRoot",-11]],1,1,1,1,1,1,4],[[18,true,false,-1,[5,750,1334]],[19,45,-2],[20,-3],[21,-4,[9],8]],[5,750,1334],[375,667,1000,0,0,0,1,1,1,1]],[15,"loadingRoot",false,1,[-12,-13]],[6,"mask",100,2,[[1,0,-14,[4],5],[24,-15]],[4,4278190080],[5,6000,6000]],[25,"New Node",false,[1],[0,0,0],[0,0,0,0,0,0,1,1,1,1]],[2,"Main Camera",1,[[26,7,-1,-16]],[5,960,640]],[13,"bg",1,[[1,0,-17,[0],1]],[4,4293260797],[5,6000,6000]],[2,"sceneRoot",1,[[4,45,750,1334,-18]],[5,750,1334]],[6,"transition",0,1,[[1,0,-19,[2],3]],[4,4293842377],[5,6000,6000]],[14,"popupRoot",512,1,[[4,45,750,1334,-20]],[5,750,1334]],[2,"round",2,[[1,0,-21,[6],7]],[5,150,150]]],0,[0,0,1,0,0,1,0,0,1,0,0,1,0,-1,5,0,-2,6,0,-3,7,0,-4,8,0,-5,9,0,-6,2,0,3,1,0,-1,3,0,-2,10,0,0,3,0,0,3,0,0,5,0,0,6,0,0,7,0,0,8,0,0,9,0,0,10,0,4,4,1,3,4,21],[0,0,0,0,0,0,0,0,0,0],[-1,1,-1,1,-1,1,-1,1,5,-1],[0,1,0,1,0,1,3,4,5,6]],[[[27,"sprite-loading",{"0":{"defines":{"USE_TEXTURE":true}}}]],0,0,[0],[6],[7]],[[{"name":"16+","rect":[0,0,122,156],"offset":[0,0],"originalSize":[122,156],"capInsets":[0,0,0,0]}],[1],0,[0],[2],[8]],[[[28,"white","white.ttf"],-1],0,0,[],[],[]],[[{"name":"12+","rect":[0,0,122,156],"offset":[0,0],"originalSize":[122,156],"capInsets":[0,0,0,0]}],[1],0,[0],[2],[9]],[[[29,"Loading"],[16,"Loading",[-9,-10,-11,-12,-13,-14],[[4,45,750,1334,-2],[30,-8,-7,-6,-5,-4,[[null,7,8],0,6,6],-3]],[31,-1,0],[5,750,1334],[375,667,0,0,0,0,1,1,1,1]],[3,"copyright",1,[[5,"广州小贝科技有限公司\n著作权登记号：2020SR0057230",20,26,1,1,-15,[5]],[9,2,-16,[4,4278190080]],[8,4,99.51800000000003,-17]],[0,"b43uuz1ltNOqYTyVPRjl/W",1,0],[5,294.14,62.76],[0,-536.102,0,0,0,0,1,1,1,1]],[3,"age",1,[[22,-18,[3],4],[33,3,-19,[[34,"4284b2heb5DPrSxSLGTf+FE","clickAge",1]]]],[0,"37OwHsuTdMKI1dJcJhdnpR",1,0],[5,122,156],[-284,-174.998,0,0,0,0,1,1,1,0]],[3,"recordNumber",1,[[5,"粤ICP备2023086686号-10X",20,26,1,1,-20,[6]],[9,2,-21,[4,4278190080]],[8,4,68.55600000000004,-22]],[0,"9aSkypW0lPgLX4YLWk38DS",1,0],[5,250.82,36.76],[0,-580.064,0,0,0,0,1,1,1,1]],[7,"title",1,[[32,"《健康游戏忠告》",30,1,1,-23,[1]]],[0,"c529gVb2ZHt5ctT5eiLeTU",1,0],[4,4278190080],[5,240,50.4],[0,-285.219,0,0,0,0,1,1,1,1]],[7,"content",1,[[5,"抵制不良游戏，拒绝盗版游戏。\n注意自我保护，谨防受骗上当。\n适度游戏益脑，沉迷游戏伤身。\n合理安排时间，享受健康生活。",25,45,1,1,-24,[2]]],[0,"51RCg1+yRGxqG2XSv2LK44",1,0],[4,4278190080],[5,350,191.7],[0,-405.086,0,0,0,0,1,1,1,1]],[17,"logo",1,[-25],[0,"a6VYzppGVApaQoBrT6ID1S",1,0],[5,512,328],[0,293.724,0,0,0,0,1,1,1,1]],[23,7,[0]]],0,[0,7,1,0,0,1,0,8,8,0,9,6,0,10,5,0,11,2,0,12,3,0,0,1,0,-1,7,0,-2,5,0,-3,6,0,-4,3,0,-5,2,0,-6,4,0,0,2,0,0,2,0,0,2,0,0,3,0,0,3,0,0,4,0,0,4,0,0,4,0,0,5,0,0,6,0,-1,8,0,13,1,25],[0,0,0,0,0,0,0,0,0],[-1,-1,-1,-1,1,-1,-1,-2,-3],[0,0,0,0,2,0,0,10,2]],[[[35,"sprite-loading",[{"hash":2514536644,"record":null,"name":"sprite-loading|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nfloat circle(in vec2 uv, in float radius){\n  return 1.0 - smoothstep(radius-0.01*radius, radius+0.01*radius, length(uv));\n}\nconst float PI = 3.141592653;\nvoid main () {\n  vec4 o = vec4(0, 0, 0, 0);\n  #if USE_TEXTURE\n    vec2 uv = v_uv0 - 0.5;\n    float R = 0.35;\n    float radius = 0.05;\n    vec2 pos = vec2(0.0);\n    float rotation = 0.0;\n    const float count = 12.0;\n    float time = cc_time.x;\n    for(float i = 0.0; i<count; i++){\n      rotation = 2.0*PI*i/count + time*2.0*PI/4.0;\n      pos = vec2(R*cos(rotation), R*sin(rotation));\n      o.a += circle(uv-pos, radius * (sin(rotation*0.45)+1.0)/3.0 + radius/3.0);\n      o.r += o.a * (sin(i/count + time + PI*6.0/3.0)+ 1.0)/2.0;\n      o.g += o.a * (sin(i/count + time + PI*4.0/3.0)+1.0)/2.0;\n      o.b += o.a * (sin(i/count + time + PI*2.0/3.0)+1.0)/2.0;\n    }\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform vec4 cc_time;\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nfloat circle(in vec2 uv, in float radius){\n  return 1.0 - smoothstep(radius-0.01*radius, radius+0.01*radius, length(uv));\n}\nconst float PI = 3.141592653;\nvoid main () {\n  vec4 o = vec4(0, 0, 0, 0);\n  #if USE_TEXTURE\n    vec2 uv = v_uv0 - 0.5;\n    float R = 0.35;\n    float radius = 0.05;\n    vec2 pos = vec2(0.0);\n    float rotation = 0.0;\n    const float count = 12.0;\n    float time = cc_time.x;\n    for(float i = 0.0; i<count; i++){\n      rotation = 2.0*PI*i/count + time*2.0*PI/4.0;\n      pos = vec2(R*cos(rotation), R*sin(rotation));\n      o.a += circle(uv-pos, radius * (sin(rotation*0.45)+1.0)/3.0 + radius/3.0);\n      o.r += o.a * (sin(i/count + time + PI*6.0/3.0)+ 1.0)/2.0;\n      o.g += o.a * (sin(i/count + time + PI*4.0/3.0)+1.0)/2.0;\n      o.b += o.a * (sin(i/count + time + PI*2.0/3.0)+1.0)/2.0;\n    }\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"sprite-loading|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]}}}]}]]],0,0,[],[],[]],[[{"name":"singleColor","rect":[0,0,1,1],"offset":[0,0],"originalSize":[1,1],"capInsets":[0,0,0,0]}],[1],0,[0],[2],[11]]]]